,
What does lazy mean?,A property whose initial value is not assigned until a property is used for the first time. 
What does fileprivate mean?,An entity is accessible only from the file in which it was declared(e.g. a fileprivate property in a class will only be accessible by other entities defined inside the file in which it was declared).
What does private mean?,An entity is only accessible from the context in which it was created (e.g. a private property in a class will only be accessible from methods of the same class).
What is a delegate?,"A delegate is a object that receives events from, and provides info about it’s parent."
Why would you make a class final?,final is used is a class when we don’t want the code to create subclasses of it
What does internal mean?,An entity is accessible only inside the module in which it was created.  Internal is the default access mode for applications.
What does open mean?,An entity that is accessible from the module it belongs to and to other modules.
What does public mean?,An entity is accessible from the module it belongs to and other modules. You can’t create subclasses of public classes outside of the module in which they were defined. Public methods can’t be overridden outside the module in which they were created.
When would you use the ‘defer’ keyword in Swift?,"Defer is used to delay a piece of work until a function ends, similar to how try/finally works in other languages. It is often used for cleanup or finalization tasks, ensuring certain operations are performed before leaving the current code block. Defer can be used for saving a file once everything has been written. You can defer multiple pieces of work and they get executed in reverse as Swift unwinds the defer stack."
What are conditional conformances?,"Protocol conformances allow us to say that one type conforms to a protocol such as Hashable or Equatable. Conditional conformances conform to a protocol only if a condition is true. You need the + operation for conforming types. Conditional conformances are useful in scenarios where a type should conform to a protocol only if certain conditions are satisfied. It enables more expressive and flexible code, especially when working with generic types."
How does the Singleton Design pattern apply in iOS and when is it useful?,"A singleton ensures that a class only has one instance and provides a global point of access. It’s useful for shared resources like configurations or network sessions, ensuring consistent behavior throughout the app."
What are opaque return types?,"Whenever you see the ‘some’ return type, it’s the opaque return type. An opaque type is when you want to specify that kind of type will be returned but you don’t want to say what type.The compiler knows what data is return even if you don’t get access to it."
What is async/await?,"It handles asynchronous code, in a sequential and readable manner.  It simplifies tasks like fetching data from a remote server or performing background operations. Mark functions using async and await keywords. ‘Async’ indicates it contains async code and ‘await’ pauses the execution until a specific async task is completed."
When would you use @autoclosure?,"@autoclosure turns a function’s parameter into a closure so that it can be executed on demand rather than immediately. Ex: assert() - the auto closure behavior here ensures our assertion doesn’t happen in release mode, it only occurs in debug mode.  Ex: func printSomething(_ result: @autoclosure () -> Void) { print(“Print something.”) }"
What is the difference between ‘self’ and ‘Self’?,self’ is the current object your code is running inside and ‘Self’ refers to the current type your code is running inside.
What are the async function rules?,"Synchronous functions cannot call async functions directly, Swift will throw an error. Async functions can call other async functions. Async functions can call synchronous functions. If you have async and synchronous functions that can be called in the same way, Swift would prefer whichever one matches your current context, if the call site is currently async it will call async otherwise it will call a synchronous function."
Define and provide useful examples of enum associated values?,"Enum associated values let us attach one or more extra pieces of data to enum cases. Ex: A weather enum that lists sunny, windy, and rainy as cases, but has an associated value for cloudy so that you can store the cloud coverage."
When would you use the guard keyword in Swift,It is most commonly used to check if a precondition has been satisfied. You can use a guard inside any kind of block as long as you escape it afterwards.  You can use it inside a loop for example.
"Apart from the built-in ones, can you give an example of property wrappers?","@AppStorage - reads and writes from UserDefaults, @FetchRequest - starts a CoreData request for a particular entity. You could make a property wrapper to make sure numbers are negative or strings are never empty."
What is the difference between a ‘String?’ and a ‘String!’ in Swift?,‘String?’ marks an optional string and ‘String’ marks an implicitly unwrapped string
What problem does optional chaining solve?,Makes our code concise because we can write multiple optional calls on one line but have execution skip over the line if any of the optionals are missing
"What is the difference between ‘try’, ‘try?’ and ‘try!’ in Swift?",‘try’ requires you to catch errors. ‘try?’ converts the throwing call into an optional where you’ll get back nil on failure. ‘try!’ will cause your app to crash if the throwing call fails.
What does the nil coalescing ?? operator do?,Lets you provide a default value to use if an optional value is empty.
What is the difference between ‘if let’ and ‘guard let’? ,"Both check and unwrap optionals. ‘guard let’ forces an early return if it’s check fails, your code will not compile unless you exit the scope. Any variables that ‘guard’ unwraps stay in scope after the guard block, whereas, if you ‘if let’ variables are only available inside the scope."
"What does the ‘final’ keyword do, and why would you use it?",Final makes a class so that you cannot subclass it. Ex: Sometimes a class does something very precise and you don’t want uses to override the important parts of the code.
What does the canImport() compiler condition do?,canImport() returns true if a module such as UIKit can be imported. Ex: It allows us to write code that does one thing on IOS and another using AppKit on macOS.
What does the assert() function do?,It evaluates some code and causes your app to crash if the result is false. It only happens in debug mode.
What does the ‘#if swift’ compiler directive do?,"It supports compile time version checking, meaning that you can mix two different Swift versions in one file without errors because only one will be used at a time."
What does the ‘#error’ compiler directive do?,It forces the compiler to emit an error message that we specify. Ex: You might use #error alongside an OS check to say that your code isn’t compatible with tvOS.
What are property observers?,"Property observers let you run code before or after a property is modified. Ex: If you have a score property that holds an integers, you might attach a ‘didSet’ observer so that it updates a label whenever the score changes."
What are raw strings?,You make a raw string by placing a hash before and after your string quotes. They are used for strings where lots of instances of quote marks or backslashes appear in order to make the string easier to read. String interpolation must use in hash in order to become active. let rawString = #’\Hello \World”#
What ways does the coordinator pattern improve navigation in apps?,"Centralizes navigation logic, making it independent of view controllers. It decouples view controllers from navigation responsibilities, leading to more modular & testable code."
What methods & classes are typically used for making network requests in iOS?,"URLSession class - provides API’s to fetch data, upload files, & manage background downloads. URLSessionConfiguration, URLSessionDataTask, URLSessionUploadTask, URLSessionDownloadTask, URLRequest, URLComponents, URLResponse, URLSessionTaskDelegate"
What is the difference between synchronous & asychronous network requests in iOS,"Synchronous network requests block the current thread until completion, potentially freezing the UI. Asynchronous requests allow the main thread to remain responsive by executing the task in the background and notifying upon completion."
How does Core Data work and how would you use it for data persistence in iOS apps?,"CoreData abstracts the details of mapping your objects as a data store (Ex: SQLite), it’s a wrapper. CoreData allows developers to create, read, update, and deleted managed objects, ensuring structured and efficient data storage."
How can you implement caching mechanisms in an iOS app to improve performance?,NSCache - a mutable collection you use to temporarily store transient key-value pairs that are subject to eviction when resources are low. URLCache - a object that maps URL requests to cache response objects. Disk caching - save to the caches directory using FileManager to save to the devices user storage in the api sandbox